"use strict";
'use client';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PieArc = void 0;
exports.getPieArcUtilityClass = getPieArcUtilityClass;
exports.pieArcClasses = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _composeClasses = _interopRequireDefault(require("@mui/utils/composeClasses"));
var _generateUtilityClass = _interopRequireDefault(require("@mui/utils/generateUtilityClass"));
var _styles = require("@mui/material/styles");
var _generateUtilityClasses = _interopRequireDefault(require("@mui/utils/generateUtilityClasses"));
var _hooks = require("../hooks");
var _animation = require("../internals/animation/animation");
var _useInteractionItemProps = require("../hooks/useInteractionItemProps");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["classes", "color", "dataIndex", "id", "isFaded", "isHighlighted", "onClick", "cornerRadius", "startAngle", "endAngle", "innerRadius", "outerRadius", "paddingAngle", "skipAnimation"];
function getPieArcUtilityClass(slot) {
  return (0, _generateUtilityClass.default)('MuiPieArc', slot);
}
const pieArcClasses = exports.pieArcClasses = (0, _generateUtilityClasses.default)('MuiPieArc', ['root', 'highlighted', 'faded', 'series']);
const useUtilityClasses = ownerState => {
  const {
    classes,
    id,
    isFaded,
    isHighlighted,
    dataIndex
  } = ownerState;
  const slots = {
    root: ['root', `series-${id}`, `data-index-${dataIndex}`, isHighlighted && 'highlighted', isFaded && 'faded']
  };
  return (0, _composeClasses.default)(slots, getPieArcUtilityClass, classes);
};
const PieArcRoot = (0, _styles.styled)('path', {
  name: 'MuiPieArc',
  slot: 'Root',
  overridesResolver: (_, styles) => styles.arc // FIXME: Inconsistent naming with slot
})(({
  theme
}) => ({
  // Got to move stroke to an element prop instead of style.
  stroke: (theme.vars || theme).palette.background.paper,
  transitionProperty: 'opacity, fill, filter',
  transitionDuration: `${_animation.ANIMATION_DURATION_MS}ms`,
  transitionTimingFunction: _animation.ANIMATION_TIMING_FUNCTION
}));
const PieArc = exports.PieArc = /*#__PURE__*/React.forwardRef(function PieArc(props, ref) {
  const {
      classes: innerClasses,
      color,
      dataIndex,
      id,
      isFaded,
      isHighlighted,
      onClick,
      cornerRadius,
      startAngle,
      endAngle,
      innerRadius,
      outerRadius,
      paddingAngle,
      skipAnimation
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  const ownerState = {
    id,
    dataIndex,
    classes: innerClasses,
    color,
    isFaded,
    isHighlighted
  };
  const classes = useUtilityClasses(ownerState);
  const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
    type: 'pie',
    seriesId: id,
    dataIndex
  });
  const animatedProps = (0, _hooks.useAnimatePieArc)({
    cornerRadius,
    startAngle,
    endAngle,
    innerRadius,
    outerRadius,
    paddingAngle,
    skipAnimation,
    ref
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(PieArcRoot, (0, _extends2.default)({
    onClick: onClick,
    cursor: onClick ? 'pointer' : 'unset',
    ownerState: ownerState,
    className: classes.root,
    fill: ownerState.color,
    opacity: ownerState.isFaded ? 0.3 : 1,
    filter: ownerState.isHighlighted ? 'brightness(120%)' : 'none',
    strokeWidth: 1,
    strokeLinejoin: "round"
  }, other, interactionProps, animatedProps));
});
if (process.env.NODE_ENV !== "production") PieArc.displayName = "PieArc";
process.env.NODE_ENV !== "production" ? PieArc.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  classes: _propTypes.default.object,
  cornerRadius: _propTypes.default.number.isRequired,
  dataIndex: _propTypes.default.number.isRequired,
  endAngle: _propTypes.default.number.isRequired,
  id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,
  innerRadius: _propTypes.default.number.isRequired,
  isFaded: _propTypes.default.bool.isRequired,
  isHighlighted: _propTypes.default.bool.isRequired,
  outerRadius: _propTypes.default.number.isRequired,
  paddingAngle: _propTypes.default.number.isRequired,
  /**
   * @default false
   */
  skipAnimation: _propTypes.default.bool.isRequired,
  startAngle: _propTypes.default.number.isRequired
} : void 0;