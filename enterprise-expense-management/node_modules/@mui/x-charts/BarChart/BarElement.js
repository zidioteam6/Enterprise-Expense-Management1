"use strict";
'use client';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BarElement = BarElement;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _useSlotProps = _interopRequireDefault(require("@mui/utils/useSlotProps"));
var _barElementClasses = require("./barElementClasses");
var _useInteractionItemProps = require("../hooks/useInteractionItemProps");
var _useItemHighlighted = require("../hooks/useItemHighlighted");
var _AnimatedBarElement = require("./AnimatedBarElement");
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["id", "dataIndex", "classes", "color", "slots", "slotProps", "style", "onClick", "skipAnimation", "layout", "x", "xOrigin", "y", "yOrigin", "width", "height"];
function BarElement(props) {
  const {
      id,
      dataIndex,
      classes: innerClasses,
      color,
      slots,
      slotProps,
      style,
      onClick,
      skipAnimation,
      layout,
      x,
      xOrigin,
      y,
      yOrigin,
      width,
      height
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  const interactionProps = (0, _useInteractionItemProps.useInteractionItemProps)({
    type: 'bar',
    seriesId: id,
    dataIndex
  });
  const {
    isFaded,
    isHighlighted
  } = (0, _useItemHighlighted.useItemHighlighted)({
    seriesId: id,
    dataIndex
  });
  const ownerState = {
    id,
    dataIndex,
    classes: innerClasses,
    color,
    isFaded,
    isHighlighted
  };
  const classes = (0, _barElementClasses.useUtilityClasses)(ownerState);
  const Bar = slots?.bar ?? _AnimatedBarElement.AnimatedBarElement;
  const barProps = (0, _useSlotProps.default)({
    elementType: Bar,
    externalSlotProps: slotProps?.bar,
    externalForwardedProps: other,
    additionalProps: (0, _extends2.default)({}, interactionProps, {
      id,
      dataIndex,
      color,
      x,
      xOrigin,
      y,
      yOrigin,
      width,
      height,
      style,
      onClick,
      cursor: onClick ? 'pointer' : 'unset',
      stroke: 'none',
      fill: color,
      skipAnimation,
      layout
    }),
    className: classes.root,
    ownerState
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Bar, (0, _extends2.default)({}, barProps));
}
process.env.NODE_ENV !== "production" ? BarElement.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  classes: _propTypes.default.object,
  dataIndex: _propTypes.default.number.isRequired,
  id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,
  layout: _propTypes.default.oneOf(['horizontal', 'vertical']).isRequired,
  skipAnimation: _propTypes.default.bool.isRequired,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: _propTypes.default.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: _propTypes.default.object,
  xOrigin: _propTypes.default.number.isRequired,
  yOrigin: _propTypes.default.number.isRequired
} : void 0;