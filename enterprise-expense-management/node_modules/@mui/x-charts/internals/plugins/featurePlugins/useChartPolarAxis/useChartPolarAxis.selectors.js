"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectorChartRotationAxis = exports.selectorChartRawRotationAxis = exports.selectorChartRawRadiusAxis = exports.selectorChartRadiusAxis = exports.selectorChartPolarCenter = exports.selectorChartPolarAxisState = void 0;
var _useChartDimensions = require("../../corePlugins/useChartDimensions");
var _useChartSeries = require("../../corePlugins/useChartSeries");
var _selectors = require("../../utils/selectors");
var _computeAxisValue = require("./computeAxisValue");
const selectorChartPolarAxisState = state => state.polarAxis;
exports.selectorChartPolarAxisState = selectorChartPolarAxisState;
const selectorChartRawRotationAxis = exports.selectorChartRawRotationAxis = (0, _selectors.createSelector)(selectorChartPolarAxisState, axis => axis?.rotation);
const selectorChartRawRadiusAxis = exports.selectorChartRawRadiusAxis = (0, _selectors.createSelector)(selectorChartPolarAxisState, axis => axis?.radius);

/**
 * The only interesting selectors that merge axis data and zoom if provided.
 */

const selectorChartRotationAxis = exports.selectorChartRotationAxis = (0, _selectors.createSelector)([selectorChartRawRotationAxis, _useChartDimensions.selectorChartDrawingArea, _useChartSeries.selectorChartSeriesProcessed, _useChartSeries.selectorChartSeriesConfig], (axis, drawingArea, formattedSeries, seriesConfig) => (0, _computeAxisValue.computeAxisValue)({
  drawingArea,
  formattedSeries,
  axis,
  seriesConfig,
  axisDirection: 'rotation'
}));
const selectorChartRadiusAxis = exports.selectorChartRadiusAxis = (0, _selectors.createSelector)([selectorChartRawRadiusAxis, _useChartDimensions.selectorChartDrawingArea, _useChartSeries.selectorChartSeriesProcessed, _useChartSeries.selectorChartSeriesConfig], (axis, drawingArea, formattedSeries, seriesConfig) => (0, _computeAxisValue.computeAxisValue)({
  drawingArea,
  formattedSeries,
  axis,
  seriesConfig,
  axisDirection: 'radius'
}));
const selectorChartPolarCenter = exports.selectorChartPolarCenter = (0, _selectors.createSelector)([_useChartDimensions.selectorChartDrawingArea], drawingArea => ({
  cx: drawingArea.left + drawingArea.width / 2,
  cy: drawingArea.top + drawingArea.height / 2
}));