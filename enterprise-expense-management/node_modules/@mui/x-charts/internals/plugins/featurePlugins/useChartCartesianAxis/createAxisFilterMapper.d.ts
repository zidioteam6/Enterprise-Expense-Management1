import { AxisId, ChartsXAxisProps, ChartsYAxisProps, ScaleName } from "../../../../models/axis.js";
import { CartesianChartSeriesType } from "../../../../models/seriesType/config.js";
import { ProcessedSeries } from "../../corePlugins/useChartSeries/index.js";
import { AxisConfig } from "../../../../models/index.js";
import { ChartSeriesConfig } from "../../models/seriesConfig/index.js";
import { DefaultizedZoomOptions, ExtremumFilter } from "./useChartCartesianAxis.types.js";
import { GetZoomAxisFilters, ZoomAxisFilters, ZoomData } from "./zoom.types.js";
export declare function createAxisFilterMapper(params: {
  zoomMap: Map<AxisId, ZoomData>;
  zoomOptions: Record<AxisId, DefaultizedZoomOptions>;
  seriesConfig: ChartSeriesConfig<CartesianChartSeriesType>;
  formattedSeries: ProcessedSeries;
  direction: 'x';
}): (axis: AxisConfig<ScaleName, any, ChartsXAxisProps>, axisIndex: number) => ExtremumFilter | null;
export declare function createAxisFilterMapper(params: {
  zoomMap: Map<AxisId, ZoomData>;
  zoomOptions: Record<AxisId, DefaultizedZoomOptions>;
  seriesConfig: ChartSeriesConfig<CartesianChartSeriesType>;
  formattedSeries: ProcessedSeries;
  direction: 'y';
}): (axis: AxisConfig<ScaleName, any, ChartsYAxisProps>, axisIndex: number) => ExtremumFilter | null;
export declare const createGetAxisFilters: (filters: ZoomAxisFilters) => GetZoomAxisFilters;